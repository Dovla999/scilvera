/**
    Use this file to implement business logic. This file will be preserved
    during next compilations.

    Generated by: silvera
    Date: 2022-05-22 03:03:00
*/

package com.silvera.Scipaper.service.impl;

import java.util.Optional;
import org.springframework.stereotype.Service;
import com.silvera.Scipaper.domain.model.*;
import com.silvera.Scipaper.service.base.*;
import com.silvera.Scipaper.repository.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;


@Service
public class ScipaperService implements IScipaperService {

    

    
    @Autowired
    PaperRepository paperRepository;

    @Autowired
    KafkaTemplate<String, com.silvera.Scipaper.messages.papermsggroup.PaperPublished> papermsggroupPaperPublishedKafkaTemplate;
    

    // Auto-generated CRUD methods


    @Override
    public Paper createPaper(Paper paper) {
        return paperRepository.save(paper);
    }

    @Override
    public Paper updatePaper(Integer id, Paper paperUpdate) {
        return null;
    }

    @Override
    public Optional<Paper> readPaper(Integer id) {
        return paperRepository.findById(id);
    }

    @Override
    public void deletePaper(Integer id) {

    }


    @Override
    public java.util.List<Paper> papers(){
        return paperRepository.findAll();
    }


    @Override
    public Paper publishPaper(java.lang.Integer id, String username){
        com.silvera.Scipaper.messages.papermsggroup.PaperPublished msg = new com.silvera.Scipaper.messages.papermsggroup.PaperPublished();

        msg.setPaperId(String.valueOf(id));
        msg.setAuthor(username);
        var paper = readPaper(id);
        paper.ifPresent(value -> msg.setTitle(value.getTitle()));

        papermsggroupPaperPublishedKafkaTemplate.send("EV_PAPER_PUBLISHED_CHANNEL", msg);
        return  paper.get();
    }
    

    

}